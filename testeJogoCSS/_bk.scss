body {
    background-color: #333333;
}

%display-none {
    display: none;
}

%display-block {
    display: block;
}
%timeStage {
    transition: all 2s;
}
%center {
    align-items: center;
    display: flex;
    height: 100%;
    justify-content: center;
    top: 0;
    width: 100%;
}

.wrapper {
    border: 1px solid #FFFFFF;
    bottom: 0;
    height: 600px;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0;
    width: 600px;
}
.anchor {
    @extend %display-none;
}
.intro {
    .ballon {
        background-color: #FFFFFF;
        border-radius: 4px;
        display: none;
        padding: 20px;
        position: relative;
        width: 200px;
        .text {
            color: #333333;
        }
        label {
            background-color: #BA0000;
            border-radius: 50%;
            bottom: -15px;
            color: #FFFFFF;
            cursor: pointer;
            padding: 8px;
            position: absolute;
            right: -15px;
        }
        &.-end {
            label {
                background-color: green;
            }
        }
    }   
}

.stage,
.intro {
    @extend %display-none;
}

.anchor:checked {
    + .ballon {
        display: block;
    }
}

.character {
    background: url(img/character-bottom.png) left top no-repeat;
    height: 74px;
    width: 74px;
}

@for $i from 1 through 2 {
    @keyframes play-#{$i} {
        100% {
            background-position-x: -592px;
        }
    }
}


$main: (
    intro: intro,
    stage: stage
);

@each $id, $class in $main {
    #anchor-#{$id} {
        &:checked {
            ~ .#{$class} {
                @extend %center;
            }
        }
    }
}

.stage {
    background: url(img/scenery.jpg) center center;
    position: relative;
    .control-group {
        display: flex;
        justify-content: center;
        position: absolute;
        &.-top {
            left: 0;
            margin: auto;
            right: 0;
            top: 20px;
        }
        &.-right {
            right: 20px;
        }
        &.-bottom {
            bottom: 20px;
            left: 0;
            margin: auto;
            right: 0;
        }
        &.-left {
            left: 20px;
        }
        .control {
            color: #FFFFFF;
            cursor: pointer;
            padding: 10px;
        }
        [level="1"] {
            background-color: #BA0000;
        }
        [level="2"] {
            background-color: green;
            @extend %display-none;
        }
        [level="3"] {
            background-color: blue;
            @extend %display-none;
        }
    }
}

$controller-position: (
    top: top,
    right: right,
    bottom: bottom,
    left: left
);


@mixin diagonal($bg) {
    @each $position, $value in $controller-position {
        @if($position == left) or ($position == right) {
            ~ #center-to-#{$position}:checked ~ .stage .character {
                animation: play-1 1.5s steps(8) forwards;
                background: url(img/character-#{$bg}.png);
            }
            ~ ##{$position}-to-center:checked ~ .stage .character {
                animation: play-1 1.5s steps(8) forwards;
                background: url(img/character-#{$position}-return.png);
            }
        }
    }
}

@mixin teste($bg) {
    @each $position, $value in $controller-position {
        @if($position == left) or ($position == right) {
            ~ ##{$position}-to-center:checked ~ .stage .character {
                animation: play-1 1.5s steps(8) forwards;
                background: url(img/character-#{$bg}-return.png);
            } 
        }
    }
}

@each $position, $value in $controller-position {
    #center-to-#{$position} {
        &:checked {
            ~ .stage {
                @extend %timeStage;
                @if($position == top) or ($position == bottom) {
                    background-position-y: $value;
                    .top,
                    .bottom {
                        &[level="1"] {
                            @extend %display-none;
                        }
                    }
                    .character {
                        animation: play-1 1.5s steps(8) forwards;
                        background: url(img/character-#{$position}.png);
                    }
                }
                @if($position == left) or ($position == right) {
                    background-position-x: $value;
                    .left,
                    .right {
                        &[level="1"] {
                            @extend %display-none;
                        }
                    }
                    .character {
                        animation: play-1 1.5s steps(8) forwards;
                        background: url(img/character-#{$position}.png);
                    }
                }
                [for="#{$position}-to-center"] {
                    @extend %display-block;
                }
            }
            @if($position == top) {
                @include diagonal($position);
            }
            @if($position == bottom) {
                @include diagonal($position);
            }
        }
    }
    ##{$position}-to-center {
        &:checked {
            ~.stage {
                @extend %timeStage;
                @if($position == top) or ($position == bottom) {
                    background-position-y: center;
                    .character {
                        animation: play-2 1.5s steps(8) forwards;
                        background: url(img/character-#{$position}-return.png);
                    }
                }
                @if($position == left) or ($position == right) {
                    background-position-x: center;
                    .character {
                        animation: play-2 1.5s steps(8) forwards;
                        background: url(img/character-#{$position}-return.png);
                    }
                }
            }
            @if($position == top) {
                @include teste($position);
            }
            @if($position == bottom) {
                @include teste($position);
            }
        }
    }
}